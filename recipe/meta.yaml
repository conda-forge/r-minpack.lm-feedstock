{% set version = '1.2-1' %}
{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-minpack.lm
  version: {{ version|replace("-", "_") }}

source:
  fn: minpack.lm_{{ version }}.tar.gz
  url:
    - {{ cran_mirror }}/src/contrib/minpack.lm_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/minpack.lm/minpack.lm_{{ version }}.tar.gz
  sha256: 14cb7dba3ef2b46da0479b46d46c76198e129a31f6157cd8b37f178adb15d5a3

build:
  merge_build_host: True  # [win]
  number: 1003
  skip: true  # [win32]
  rpaths:
    - lib/R/lib/
    - lib/

requirements:
  build:
    - {{ compiler('c') }}        # [not win]
    - {{ compiler('fortran') }}  # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{ compiler('m2w64_fortran') }}        # [win]
    - {{posix}}filesystem        # [win]
    - {{posix}}make
    - {{posix}}sed               # [win]
    - {{posix}}coreutils         # [win]
    - {{posix}}zip               # [win]
  host:
    - r-base
  run:
    - r-base
    - {{native}}gcc-libs         # [win]

test:
  commands:
    - $R -e "library('minpack.lm')"           # [not win]
    - "\"%R%\" -e \"library('minpack.lm')\""  # [win]

about:
  home: https://CRAN.R-project.org/package=minpack.lm
  license: GPL-3
  summary: 'The nls.lm function provides an R interface to lmder and lmdif from the MINPACK library,
    for solving nonlinear least-squares problems by a modification of the Levenberg-Marquardt
    algorithm, with support for lower and upper parameter bounds.  The implementation
    can be used via nls-like calls using the nlsLM function.  '
  license_family: GPL3
  license_file: '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-3'

extra:
  recipe-maintainers:
    - conda-forge/r
    - johanneskoester
    - bgruening
    - daler
    - jdblischak
    - cbrueffer
    - dbast
